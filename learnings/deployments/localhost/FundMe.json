{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "largeValueWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "valueIsLessThanMinUsd",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "bal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethUsdPriceFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllFunders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersWithAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa5234a85e7ee9a6c42329d043ab01de1afd70f36cd94697ac274016761a39be2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "919657",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x02181de23fb218405ccbaaa0ff7ea6d52305c0c10c35d7ea13b7f47df3329a95",
    "transactionHash": "0xa5234a85e7ee9a6c42329d043ab01de1afd70f36cd94697ac274016761a39be2",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "919657",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0e4645e5a0c65b544a622aba12962d62",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"largeValueWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"valueIsLessThanMinUsd\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"bal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethUsdPriceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFunders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersWithAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface AggregatorV3Interface {\\r\\n    \\r\\n    function latestRoundData()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        );\\r\\n}\\r\\n\",\"keccak256\":\"0xf01a8a5b2fd5c43b232792755a455b6570fc1f60536c2d9ce6a5a3c9375743cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\n\\npragma solidity^0.8.19;\\n\\nimport \\\"./AggregatorV3Interface.sol\\\";\\nimport \\\"./getPriceFeeds.sol\\\";\\n\\nerror valueIsLessThanMinUsd();\\nerror notOwner();\\nerror largeValueWithdraw();\\ncontract FundMe {\\n    using PriceFeeds for int256;\\n    \\n    address public immutable owner;\\n    int256  public minimumUsd=50;\\n    uint256 public bal;\\n    address public ethUsdPriceFeedAddress;\\n    mapping( address=>uint256) public usersWithAmountFunded;\\n    address[] public funders ;\\n\\n    \\n    \\n    constructor(address priceAddress) {\\n        owner = msg.sender;\\n        ethUsdPriceFeedAddress= priceAddress;\\n\\n        bal= 0;\\n    }\\n\\n    receive() external payable {\\n        sendEth();\\n     }\\n     fallback() external payable { \\n        sendEth();\\n     }\\n\\n     \\n    function getAllFunders() public  view returns(  address[] memory){\\n        return funders;\\n    }\\n    \\n    function sendEth() public payable {\\n        uint256 sendValue= msg.value;\\n        if(minimumUsd.getPriceOfEth(ethUsdPriceFeedAddress)>int256(msg.value)) {\\n            revert valueIsLessThanMinUsd();\\n        }\\n        \\n        bal = bal+sendValue;\\n        if (findFunder(msg.sender)){\\n            usersWithAmountFunded[msg.sender] = usersWithAmountFunded[msg.sender]+sendValue;\\n\\n        }\\n        else{\\n\\n            usersWithAmountFunded[msg.sender]= sendValue;\\n            funders.push(msg.sender);\\n        }\\n       \\n    }\\n    \\n\\n    function findFunder(address sender)internal view returns(bool){\\n        for( uint256 i =0; i< funders.length;i++){\\n            if(funders[i]== sender){\\n                return true;\\n            }\\n        }\\n        return false;\\n\\n    }\\n\\n    function withdraw(uint256 val) public  isOwner() {\\n        if ( val>address(this).balance) revert largeValueWithdraw();\\n        (bool success,) = payable(owner).call{value:val}(\\\"\\\");\\n        require(success,\\\"transaction was unsuccessful\\\");\\n        bal= bal-val;\\n\\n\\n    }\\n\\n    modifier isOwner(){\\n        if ( msg.sender!= owner){\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n  \\n\\n\\n}\\n\",\"keccak256\":\"0xb93833d3749ff8d103964c0646d73344e475515419a5d0deadf6ac413c4db14c\",\"license\":\"MIT\"},\"contracts/getPriceFeeds.sol\":{\"content\":\"\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19 ;\\r\\n\\r\\nimport \\\"./AggregatorV3Interface.sol\\\";\\r\\nlibrary PriceFeeds{\\r\\n    \\r\\n\\r\\n    function getConversionRate(address ethUsdPriceFeedAddress) public view returns(int256){\\r\\n        AggregatorV3Interface priceFeeds= AggregatorV3Interface(ethUsdPriceFeedAddress);\\r\\n        (, int256 price,,,)= priceFeeds.latestRoundData();\\r\\n        return price;\\r\\n\\r\\n\\r\\n    }\\r\\n    function getPriceOfEth(int256 value , address ethUsdPriceFeedAddress) internal view returns(int256){\\r\\n        int256 valueOfEth= getConversionRate(ethUsdPriceFeedAddress)/10e7;\\r\\n        value = value*10e17;\\r\\n        int256 ethAmount= value/valueOfEth;\\r\\n        return ethAmount;\\r\\n        \\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x25def6c522da491fb1d2041070aeb7636b3c6e0ba1eeea2f5645c0c593d92c62\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052603260005534801561001557600080fd5b5060405162001044380380620010448339818101604052810190610039919061011f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b608051610ece6200017660003960008181610404015281816104c501526106530152610ece6000f3fe60806040526004361061008a5760003560e01c80636fbbb55d116100595780636fbbb55d1461012c5780637525693b146101575780638da5cb5b14610194578063a22e6ee3146101bf578063dc0d3dff146101ea57610099565b806306e99fef146100a3578063098de820146100ad5780632e1a7d4d146100d85780633d79d1c81461010157610099565b3661009957610097610227565b005b6100a1610227565b005b6100ab610227565b005b3480156100b957600080fd5b506100c26103fc565b6040516100cf9190610876565b60405180910390f35b3480156100e457600080fd5b506100ff60048036038101906100fa91906108cc565b610402565b005b34801561010d57600080fd5b506101166105a5565b6040516101239190610908565b60405180910390f35b34801561013857600080fd5b506101416105ab565b60405161014e9190610a13565b60405180910390f35b34801561016357600080fd5b5061017e60048036038101906101799190610a61565b610639565b60405161018b9190610908565b60405180910390f35b3480156101a057600080fd5b506101a9610651565b6040516101b69190610a9d565b60405180910390f35b3480156101cb57600080fd5b506101d4610675565b6040516101e19190610a9d565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c91906108cc565b61069b565b60405161021e9190610a9d565b60405180910390f35b600034905034610264600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000546106da90919063ffffffff16565b131561029c576040517fa29f122700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001546102aa9190610ae7565b6001819055506102b933610728565b156103515780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103099190610ae7565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103f9565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610487576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156104c1576040517fa9ba821500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161050790610b4c565b60006040518083038185875af1925050503d8060008114610544576040519150601f19603f3d011682016040523d82523d6000602084013e610549565b606091505b505090508061058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058490610bbe565b60405180910390fd5b8160015461059b9190610bde565b6001819055505050565b60015481565b6060600480548060200260200160405190810160405280929190818152602001828054801561062f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105e5575b5050505050905090565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106106ab57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806305f5e1006106eb846107d6565b6106f59190610c41565b9050670de0b6b3a76400008461070b9190610cab565b93506000818561071b9190610c41565b9050809250505092915050565b600080600090505b6004805490508110156107cb578273ffffffffffffffffffffffffffffffffffffffff166004828154811061076857610767610d23565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107b85760019150506107d1565b80806107c390610d52565b915050610730565b50600090505b919050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d9190610e1d565b5050509150508092505050919050565b6000819050919050565b6108708161085d565b82525050565b600060208201905061088b6000830184610867565b92915050565b600080fd5b6000819050919050565b6108a981610896565b81146108b457600080fd5b50565b6000813590506108c6816108a0565b92915050565b6000602082840312156108e2576108e1610891565b5b60006108f0848285016108b7565b91505092915050565b61090281610896565b82525050565b600060208201905061091d60008301846108f9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061097a8261094f565b9050919050565b61098a8161096f565b82525050565b600061099c8383610981565b60208301905092915050565b6000602082019050919050565b60006109c082610923565b6109ca818561092e565b93506109d58361093f565b8060005b83811015610a065781516109ed8882610990565b97506109f8836109a8565b9250506001810190506109d9565b5085935050505092915050565b60006020820190508181036000830152610a2d81846109b5565b905092915050565b610a3e8161096f565b8114610a4957600080fd5b50565b600081359050610a5b81610a35565b92915050565b600060208284031215610a7757610a76610891565b5b6000610a8584828501610a4c565b91505092915050565b610a978161096f565b82525050565b6000602082019050610ab26000830184610a8e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610af282610896565b9150610afd83610896565b9250828201905080821115610b1557610b14610ab8565b5b92915050565b600081905092915050565b50565b6000610b36600083610b1b565b9150610b4182610b26565b600082019050919050565b6000610b5782610b29565b9150819050919050565b600082825260208201905092915050565b7f7472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b6000610ba8601c83610b61565b9150610bb382610b72565b602082019050919050565b60006020820190508181036000830152610bd781610b9b565b9050919050565b6000610be982610896565b9150610bf483610896565b9250828203905081811115610c0c57610c0b610ab8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4c8261085d565b9150610c578361085d565b925082610c6757610c66610c12565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610ca057610c9f610ab8565b5b828205905092915050565b6000610cb68261085d565b9150610cc18361085d565b9250828202610ccf8161085d565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d0757610d06610ab8565b5b8282058414831517610d1c57610d1b610ab8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5d82610896565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8f57610d8e610ab8565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b610db981610d9a565b8114610dc457600080fd5b50565b600081519050610dd681610db0565b92915050565b610de58161085d565b8114610df057600080fd5b50565b600081519050610e0281610ddc565b92915050565b600081519050610e17816108a0565b92915050565b600080600080600060a08688031215610e3957610e38610891565b5b6000610e4788828901610dc7565b9550506020610e5888828901610df3565b9450506040610e6988828901610e08565b9350506060610e7a88828901610e08565b9250506080610e8b88828901610dc7565b915050929550929590935056fea2646970667358221220f568cd842d365a6941eb7d7e4ab87c2ea845fbfee668f5aa57383c29dbdc818364736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80636fbbb55d116100595780636fbbb55d1461012c5780637525693b146101575780638da5cb5b14610194578063a22e6ee3146101bf578063dc0d3dff146101ea57610099565b806306e99fef146100a3578063098de820146100ad5780632e1a7d4d146100d85780633d79d1c81461010157610099565b3661009957610097610227565b005b6100a1610227565b005b6100ab610227565b005b3480156100b957600080fd5b506100c26103fc565b6040516100cf9190610876565b60405180910390f35b3480156100e457600080fd5b506100ff60048036038101906100fa91906108cc565b610402565b005b34801561010d57600080fd5b506101166105a5565b6040516101239190610908565b60405180910390f35b34801561013857600080fd5b506101416105ab565b60405161014e9190610a13565b60405180910390f35b34801561016357600080fd5b5061017e60048036038101906101799190610a61565b610639565b60405161018b9190610908565b60405180910390f35b3480156101a057600080fd5b506101a9610651565b6040516101b69190610a9d565b60405180910390f35b3480156101cb57600080fd5b506101d4610675565b6040516101e19190610a9d565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c91906108cc565b61069b565b60405161021e9190610a9d565b60405180910390f35b600034905034610264600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000546106da90919063ffffffff16565b131561029c576040517fa29f122700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001546102aa9190610ae7565b6001819055506102b933610728565b156103515780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103099190610ae7565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506103f9565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610487576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156104c1576040517fa9ba821500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161050790610b4c565b60006040518083038185875af1925050503d8060008114610544576040519150601f19603f3d011682016040523d82523d6000602084013e610549565b606091505b505090508061058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058490610bbe565b60405180910390fd5b8160015461059b9190610bde565b6001819055505050565b60015481565b6060600480548060200260200160405190810160405280929190818152602001828054801561062f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105e5575b5050505050905090565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106106ab57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806305f5e1006106eb846107d6565b6106f59190610c41565b9050670de0b6b3a76400008461070b9190610cab565b93506000818561071b9190610c41565b9050809250505092915050565b600080600090505b6004805490508110156107cb578273ffffffffffffffffffffffffffffffffffffffff166004828154811061076857610767610d23565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107b85760019150506107d1565b80806107c390610d52565b915050610730565b50600090505b919050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610829573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084d9190610e1d565b5050509150508092505050919050565b6000819050919050565b6108708161085d565b82525050565b600060208201905061088b6000830184610867565b92915050565b600080fd5b6000819050919050565b6108a981610896565b81146108b457600080fd5b50565b6000813590506108c6816108a0565b92915050565b6000602082840312156108e2576108e1610891565b5b60006108f0848285016108b7565b91505092915050565b61090281610896565b82525050565b600060208201905061091d60008301846108f9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061097a8261094f565b9050919050565b61098a8161096f565b82525050565b600061099c8383610981565b60208301905092915050565b6000602082019050919050565b60006109c082610923565b6109ca818561092e565b93506109d58361093f565b8060005b83811015610a065781516109ed8882610990565b97506109f8836109a8565b9250506001810190506109d9565b5085935050505092915050565b60006020820190508181036000830152610a2d81846109b5565b905092915050565b610a3e8161096f565b8114610a4957600080fd5b50565b600081359050610a5b81610a35565b92915050565b600060208284031215610a7757610a76610891565b5b6000610a8584828501610a4c565b91505092915050565b610a978161096f565b82525050565b6000602082019050610ab26000830184610a8e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610af282610896565b9150610afd83610896565b9250828201905080821115610b1557610b14610ab8565b5b92915050565b600081905092915050565b50565b6000610b36600083610b1b565b9150610b4182610b26565b600082019050919050565b6000610b5782610b29565b9150819050919050565b600082825260208201905092915050565b7f7472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b6000610ba8601c83610b61565b9150610bb382610b72565b602082019050919050565b60006020820190508181036000830152610bd781610b9b565b9050919050565b6000610be982610896565b9150610bf483610896565b9250828203905081811115610c0c57610c0b610ab8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4c8261085d565b9150610c578361085d565b925082610c6757610c66610c12565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610ca057610c9f610ab8565b5b828205905092915050565b6000610cb68261085d565b9150610cc18361085d565b9250828202610ccf8161085d565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d0757610d06610ab8565b5b8282058414831517610d1c57610d1b610ab8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5d82610896565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d8f57610d8e610ab8565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b610db981610d9a565b8114610dc457600080fd5b50565b600081519050610dd681610db0565b92915050565b610de58161085d565b8114610df057600080fd5b50565b600081519050610e0281610ddc565b92915050565b600081519050610e17816108a0565b92915050565b600080600080600060a08688031215610e3957610e38610891565b5b6000610e4788828901610dc7565b9550506020610e5888828901610df3565b9450506040610e6988828901610e08565b9350506060610e7a88828901610e08565b9250506080610e8b88828901610dc7565b915050929550929590935056fea2646970667358221220f568cd842d365a6941eb7d7e4ab87c2ea845fbfee668f5aa57383c29dbdc818364736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 33,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "astId": 35,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "bal",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "ethUsdPriceFeedAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 41,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "usersWithAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 44,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}