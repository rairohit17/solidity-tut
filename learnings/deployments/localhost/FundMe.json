{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "largeValueWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "valueIsLessThanMinUsd",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllFunders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersWithAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0cb255bc7417d348afca9c5ca9231d3a55bf526cb0e2b98fd11850ec3caa3628",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "835581",
    "logsBloom": "0x
    "blockHash": "0x6c539c21e52680144584b73c93ee2c4a1b5cfd9113f57cbf211d931623a402fa",
    "transactionHash": "0x0cb255bc7417d348afca9c5ca9231d3a55bf526cb0e2b98fd11850ec3caa3628",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "835581",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "49fdcf762340a7cd4c5c2f93b14797f4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"largeValueWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"valueIsLessThanMinUsd\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFunders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersWithAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface AggregatorV3Interface {\\r\\n    \\r\\n    function latestRoundData()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        );\\r\\n}\\r\\n\",\"keccak256\":\"0xf01a8a5b2fd5c43b232792755a455b6570fc1f60536c2d9ce6a5a3c9375743cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\n\\npragma solidity^0.8.19;\\n\\nimport \\\"./AggregatorV3Interface.sol\\\";\\nimport \\\"./getPriceFeeds.sol\\\";\\n\\nerror valueIsLessThanMinUsd();\\nerror notOwner();\\nerror largeValueWithdraw();\\ncontract FundMe {\\n    using PriceFeeds for int256;\\n    \\n    address private immutable owner;\\n    int256  public constant minimumUsd=50;\\n    uint256 private bal;\\n    address private immutable  ethUsdPriceFeedAddress;\\n    mapping( address=>uint256) public usersWithAmountFunded;\\n    address[] public funders ;\\n\\n    \\n    \\n    constructor(address priceAddress) {\\n        owner = msg.sender;\\n        ethUsdPriceFeedAddress= priceAddress;\\n\\n        bal= 0;\\n    }\\n\\n    receive() external payable {\\n        sendEth();\\n     }\\n     fallback() external payable { \\n        sendEth();\\n     }\\n\\n     \\n    function getAllFunders() public  view returns(  address[] memory){\\n        return funders;\\n    }\\n    \\n    function sendEth() public payable {\\n        uint256 sendValue= msg.value;\\n        if(minimumUsd.getPriceOfEth(ethUsdPriceFeedAddress)>int256(msg.value)) {\\n            revert valueIsLessThanMinUsd();\\n        }\\n        \\n        bal = bal+sendValue;\\n        if (findFunder(msg.sender)){\\n           usersWithAmountFunded[msg.sender] = usersWithAmountFunded[msg.sender]+sendValue;\\n\\n        }\\n        else{\\n\\n            usersWithAmountFunded[msg.sender]= sendValue;\\n            funders.push(msg.sender);\\n        }\\n       \\n    }\\n    \\n\\n    function findFunder(address sender)internal view returns(bool){\\n        for( uint256 i =0; i< funders.length;i++){\\n            if(funders[i]== sender){\\n                return true;\\n            }\\n        } \\n        return false;\\n\\n    }\\n\\n    function withdraw(uint256 val) public  isOwner() {\\n        if ( val>address(this).balance) revert largeValueWithdraw();\\n        (bool success,) = payable(owner).call{value:val}(\\\"\\\");\\n        require(success,\\\"transaction was unsuccessful\\\");\\n        bal= bal-val;\\n\\n\\n    }\\n\\n    modifier isOwner(){\\n        if ( msg.sender!= owner){\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n    function getBalance() public view returns(uint256){ return bal;\\n    }\\n  \\n\\n\\n}\\n\",\"keccak256\":\"0xa1f3485e07495dda12cba65eb2c06de0e3103386e783f440c18a343a6b496ec2\",\"license\":\"MIT\"},\"contracts/getPriceFeeds.sol\":{\"content\":\"\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19 ;\\r\\n\\r\\nimport \\\"./AggregatorV3Interface.sol\\\";\\r\\nlibrary PriceFeeds{\\r\\n    \\r\\n\\r\\n    function getConversionRate(address ethUsdPriceFeedAddress) public view returns(int256){\\r\\n        AggregatorV3Interface priceFeeds= AggregatorV3Interface(ethUsdPriceFeedAddress);\\r\\n        (, int256 price,,,)= priceFeeds.latestRoundData();\\r\\n        return price;\\r\\n\\r\\n\\r\\n    }\\r\\n    function getPriceOfEth(int256 value , address ethUsdPriceFeedAddress) internal view returns(int256){\\r\\n        int256 valueOfEth= getConversionRate(ethUsdPriceFeedAddress)/10e7;\\r\\n        value = value*10e17;\\r\\n        int256 ethAmount= value/valueOfEth;\\r\\n        return ethAmount;\\r\\n        \\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x25def6c522da491fb1d2041070aeb7636b3c6e0ba1eeea2f5645c0c593d92c62\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610f7a380380610f7a8339818101604052810190610032919061010a565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250506000808190555050610137565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d7826100ac565b9050919050565b6100e7816100cc565b81146100f257600080fd5b50565b600081519050610104816100de565b92915050565b6000602082840312156101205761011f6100a7565b5b600061012e848285016100f5565b91505092915050565b60805160a051610e1761016360003960006101c601526000818161039d015261045e0152610e176000f3fe6080604052600436106100745760003560e01c80632e1a7d4d1161004e5780632e1a7d4d146100ed5780636fbbb55d146101165780637525693b14610141578063dc0d3dff1461017e57610083565b806306e99fef1461008d578063098de8201461009757806312065fe0146100c257610083565b36610083576100816101bb565b005b61008b6101bb565b005b6100956101bb565b005b3480156100a357600080fd5b506100ac61038d565b6040516100b991906107bf565b60405180910390f35b3480156100ce57600080fd5b506100d7610392565b6040516100e491906107f3565b60405180910390f35b3480156100f957600080fd5b50610114600480360381019061010f919061083f565b61039b565b005b34801561012257600080fd5b5061012b61053e565b604051610138919061095c565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906109aa565b6105cc565b60405161017591906107f3565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a0919061083f565b6105e4565b6040516101b291906109e6565b60405180910390f35b6000349050346101f57f0000000000000000000000000000000000000000000000000000000000000000603261062390919063ffffffff16565b131561022d576040517fa29f122700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060005461023b9190610a30565b60008190555061024a33610671565b156102e25780600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461029a9190610a30565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061038a565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b603281565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610420576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561045a576040517fa9ba821500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516104a090610a95565b60006040518083038185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b5050905080610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90610b07565b60405180910390fd5b816000546105349190610b27565b6000819055505050565b606060028054806020026020016040519081016040528092919081815260200182805480156105c257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610578575b5050505050905090565b60016020528060005260406000206000915090505481565b600281815481106105f457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806305f5e1006106348461071f565b61063e9190610b8a565b9050670de0b6b3a7640000846106549190610bf4565b9350600081856106649190610b8a565b9050809250505092915050565b600080600090505b600280549050811015610714578273ffffffffffffffffffffffffffffffffffffffff16600282815481106106b1576106b0610c6c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361070157600191505061071a565b808061070c90610c9b565b915050610679565b50600090505b919050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190610d66565b5050509150508092505050919050565b6000819050919050565b6107b9816107a6565b82525050565b60006020820190506107d460008301846107b0565b92915050565b6000819050919050565b6107ed816107da565b82525050565b600060208201905061080860008301846107e4565b92915050565b600080fd5b61081c816107da565b811461082757600080fd5b50565b60008135905061083981610813565b92915050565b6000602082840312156108555761085461080e565b5b60006108638482850161082a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c382610898565b9050919050565b6108d3816108b8565b82525050565b60006108e583836108ca565b60208301905092915050565b6000602082019050919050565b60006109098261086c565b6109138185610877565b935061091e83610888565b8060005b8381101561094f57815161093688826108d9565b9750610941836108f1565b925050600181019050610922565b5085935050505092915050565b6000602082019050818103600083015261097681846108fe565b905092915050565b610987816108b8565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf61080e565b5b60006109ce84828501610995565b91505092915050565b6109e0816108b8565b82525050565b60006020820190506109fb60008301846109d7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a3b826107da565b9150610a46836107da565b9250828201905080821115610a5e57610a5d610a01565b5b92915050565b600081905092915050565b50565b6000610a7f600083610a64565b9150610a8a82610a6f565b600082019050919050565b6000610aa082610a72565b9150819050919050565b600082825260208201905092915050565b7f7472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b6000610af1601c83610aaa565b9150610afc82610abb565b602082019050919050565b60006020820190508181036000830152610b2081610ae4565b9050919050565b6000610b32826107da565b9150610b3d836107da565b9250828203905081811115610b5557610b54610a01565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b95826107a6565b9150610ba0836107a6565b925082610bb057610baf610b5b565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610be957610be8610a01565b5b828205905092915050565b6000610bff826107a6565b9150610c0a836107a6565b9250828202610c18816107a6565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c5057610c4f610a01565b5b8282058414831517610c6557610c64610a01565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ca6826107da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cd857610cd7610a01565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b610d0281610ce3565b8114610d0d57600080fd5b50565b600081519050610d1f81610cf9565b92915050565b610d2e816107a6565b8114610d3957600080fd5b50565b600081519050610d4b81610d25565b92915050565b600081519050610d6081610813565b92915050565b600080600080600060a08688031215610d8257610d8161080e565b5b6000610d9088828901610d10565b9550506020610da188828901610d3c565b9450506040610db288828901610d51565b9350506060610dc388828901610d51565b9250506080610dd488828901610d10565b915050929550929590935056fea264697066735822122094680ce7b247908bf4c1d2750a4e55e1c8e65f7492d9a4adc1cf9a453a4054bd64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80632e1a7d4d1161004e5780632e1a7d4d146100ed5780636fbbb55d146101165780637525693b14610141578063dc0d3dff1461017e57610083565b806306e99fef1461008d578063098de8201461009757806312065fe0146100c257610083565b36610083576100816101bb565b005b61008b6101bb565b005b6100956101bb565b005b3480156100a357600080fd5b506100ac61038d565b6040516100b991906107bf565b60405180910390f35b3480156100ce57600080fd5b506100d7610392565b6040516100e491906107f3565b60405180910390f35b3480156100f957600080fd5b50610114600480360381019061010f919061083f565b61039b565b005b34801561012257600080fd5b5061012b61053e565b604051610138919061095c565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906109aa565b6105cc565b60405161017591906107f3565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a0919061083f565b6105e4565b6040516101b291906109e6565b60405180910390f35b6000349050346101f57f0000000000000000000000000000000000000000000000000000000000000000603261062390919063ffffffff16565b131561022d576040517fa29f122700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060005461023b9190610a30565b60008190555061024a33610671565b156102e25780600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461029a9190610a30565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061038a565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b603281565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610420576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4781111561045a576040517fa9ba821500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16826040516104a090610a95565b60006040518083038185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b5050905080610526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051d90610b07565b60405180910390fd5b816000546105349190610b27565b6000819055505050565b606060028054806020026020016040519081016040528092919081815260200182805480156105c257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610578575b5050505050905090565b60016020528060005260406000206000915090505481565b600281815481106105f457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806305f5e1006106348461071f565b61063e9190610b8a565b9050670de0b6b3a7640000846106549190610bf4565b9350600081856106649190610b8a565b9050809250505092915050565b600080600090505b600280549050811015610714578273ffffffffffffffffffffffffffffffffffffffff16600282815481106106b1576106b0610c6c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361070157600191505061071a565b808061070c90610c9b565b915050610679565b50600090505b919050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107969190610d66565b5050509150508092505050919050565b6000819050919050565b6107b9816107a6565b82525050565b60006020820190506107d460008301846107b0565b92915050565b6000819050919050565b6107ed816107da565b82525050565b600060208201905061080860008301846107e4565b92915050565b600080fd5b61081c816107da565b811461082757600080fd5b50565b60008135905061083981610813565b92915050565b6000602082840312156108555761085461080e565b5b60006108638482850161082a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c382610898565b9050919050565b6108d3816108b8565b82525050565b60006108e583836108ca565b60208301905092915050565b6000602082019050919050565b60006109098261086c565b6109138185610877565b935061091e83610888565b8060005b8381101561094f57815161093688826108d9565b9750610941836108f1565b925050600181019050610922565b5085935050505092915050565b6000602082019050818103600083015261097681846108fe565b905092915050565b610987816108b8565b811461099257600080fd5b50565b6000813590506109a48161097e565b92915050565b6000602082840312156109c0576109bf61080e565b5b60006109ce84828501610995565b91505092915050565b6109e0816108b8565b82525050565b60006020820190506109fb60008301846109d7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a3b826107da565b9150610a46836107da565b9250828201905080821115610a5e57610a5d610a01565b5b92915050565b600081905092915050565b50565b6000610a7f600083610a64565b9150610a8a82610a6f565b600082019050919050565b6000610aa082610a72565b9150819050919050565b600082825260208201905092915050565b7f7472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b6000610af1601c83610aaa565b9150610afc82610abb565b602082019050919050565b60006020820190508181036000830152610b2081610ae4565b9050919050565b6000610b32826107da565b9150610b3d836107da565b9250828203905081811115610b5557610b54610a01565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b95826107a6565b9150610ba0836107a6565b925082610bb057610baf610b5b565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615610be957610be8610a01565b5b828205905092915050565b6000610bff826107a6565b9150610c0a836107a6565b9250828202610c18816107a6565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c5057610c4f610a01565b5b8282058414831517610c6557610c64610a01565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ca6826107da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cd857610cd7610a01565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b610d0281610ce3565b8114610d0d57600080fd5b50565b600081519050610d1f81610cf9565b92915050565b610d2e816107a6565b8114610d3957600080fd5b50565b600081519050610d4b81610d25565b92915050565b600081519050610d6081610813565b92915050565b600080600080600060a08688031215610d8257610d8161080e565b5b6000610d9088828901610d10565b9550506020610da188828901610d3c565b9450506040610db288828901610d51565b9350506060610dc388828901610d51565b9250506080610dd488828901610d10565b915050929550929590935056fea264697066735822122094680ce7b247908bf4c1d2750a4e55e1c8e65f7492d9a4adc1cf9a453a4054bd64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 35,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "bal",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 41,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "usersWithAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 44,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}