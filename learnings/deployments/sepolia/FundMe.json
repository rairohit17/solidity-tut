{
  "address": "0xd5F894948304132945F31802aF32780F15c10Ad3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "largeValueWithdraw",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "valueIsLessThanMinUsd",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "bal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethUsdPriceFeedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usersWithAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x177ebf085de4d3b0c5e2e7fb6f31e6c412907381ec31ec6947efb16150e87bdb",
  "receipt": {
    "to": null,
    "from": "0x2A4Ea34c79A43f1C0c76080FE41b8D0bB9e4BA6a",
    "contractAddress": "0xd5F894948304132945F31802aF32780F15c10Ad3",
    "transactionIndex": 53,
    "gasUsed": "774380",
    "logsBloom": "0x
    "blockHash": "0x8dafbc6f08976ed5f469184f93dfc1ead605b461556ab0cc76d6f147685e2fe6",
    "transactionHash": "0x177ebf085de4d3b0c5e2e7fb6f31e6c412907381ec31ec6947efb16150e87bdb",
    "logs": [],
    "blockNumber": 7504170,
    "cumulativeGasUsed": "13281168",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "5b6d409fa399b4b7ff574d5a1db2c877",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"largeValueWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"valueIsLessThanMinUsd\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"bal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethUsdPriceFeedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usersWithAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface AggregatorV3Interface {\\r\\n    \\r\\n    function latestRoundData()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint80 roundId,\\r\\n            int256 answer,\\r\\n            uint256 startedAt,\\r\\n            uint256 updatedAt,\\r\\n            uint80 answeredInRound\\r\\n        );\\r\\n}\\r\\n\",\"keccak256\":\"0xf01a8a5b2fd5c43b232792755a455b6570fc1f60536c2d9ce6a5a3c9375743cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\n\\npragma solidity^0.8.19;\\n\\nimport \\\"./AggregatorV3Interface.sol\\\";\\nimport \\\"./getPriceFeeds.sol\\\";\\n\\nerror valueIsLessThanMinUsd();\\nerror notOwner();\\nerror largeValueWithdraw();\\ncontract FundMe {\\n    using PriceFeeds for int256;\\n    \\n    address public immutable owner;\\n    int256  internal minimumUsd=3000;\\n    uint256 public bal;\\n    address public ethUsdPriceFeedAddress;\\n    mapping( address=>uint256) public usersWithAmountFunded;\\n    address[]  funders ;\\n\\n    \\n    \\n    constructor(address priceAddress) {\\n        owner = msg.sender;\\n        ethUsdPriceFeedAddress= priceAddress;\\n\\n        bal= 0;\\n    }\\n\\n    receive() external payable {\\n        sendEth();\\n     }\\n     fallback() external payable { \\n        sendEth();\\n     }\\n\\n    \\n    function sendEth() public payable {\\n        uint256 sendValue= msg.value;\\n        if(minimumUsd.getPriceOfEth(ethUsdPriceFeedAddress)>int256(msg.value)) {\\n            revert valueIsLessThanMinUsd();\\n        }\\n        \\n        bal = bal+sendValue;\\n        if (findFunder(msg.sender)){\\n            usersWithAmountFunded[msg.sender] = usersWithAmountFunded[msg.sender]+sendValue;\\n\\n        }\\n        else{\\n\\n            usersWithAmountFunded[msg.sender]= sendValue;\\n            funders.push(msg.sender);\\n        }\\n       \\n    }\\n    \\n\\n    function findFunder(address sender)internal view returns(bool){\\n        for( uint256 i =0; i< funders.length;i++){\\n            if(funders[i]== sender){\\n                return true;\\n            }\\n        }\\n        return false;\\n\\n    }\\n\\n    function withdraw(uint256 val) public  isOwner() {\\n        if ( val>address(this).balance) revert largeValueWithdraw();\\n        (bool success,) = payable(owner).call{value:val}(\\\"\\\");\\n        require(success,\\\"transaction was unsuccessful\\\");\\n        bal= bal-val;\\n\\n\\n    }\\n\\n    modifier isOwner(){\\n        if ( msg.sender!= owner){\\n            revert notOwner();\\n        }\\n        _;\\n    }\\n  \\n\\n\\n}\\n\",\"keccak256\":\"0xd88ae7d1895f2ec496fb91a357ae1789e20fac03d791840e405a14ecc309f312\",\"license\":\"MIT\"},\"contracts/getPriceFeeds.sol\":{\"content\":\"\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19 ;\\r\\n\\r\\nimport \\\"./AggregatorV3Interface.sol\\\";\\r\\nlibrary PriceFeeds{\\r\\n    \\r\\n\\r\\n    function getConversionRate(address ethUsdPriceFeedAddress) public view returns(int256){\\r\\n        AggregatorV3Interface priceFeeds= AggregatorV3Interface(ethUsdPriceFeedAddress);\\r\\n        (, int256 price,,,)= priceFeeds.latestRoundData();\\r\\n        return price;\\r\\n\\r\\n\\r\\n    }\\r\\n    function getPriceOfEth(int256 value , address ethUsdPriceFeedAddress) internal view returns(int256){\\r\\n        int256 valueOfEth= getConversionRate(ethUsdPriceFeedAddress)/10e7;\\r\\n        value = value*10e17;\\r\\n        int256 ethAmount= value/valueOfEth;\\r\\n        return ethAmount;\\r\\n        \\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x25def6c522da491fb1d2041070aeb7636b3c6e0ba1eeea2f5645c0c593d92c62\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052610bb860005534801561001657600080fd5b50604051610da1380380610da18339818101604052810190610038919061011e565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055505061014b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100eb826100c0565b9050919050565b6100fb816100e0565b811461010657600080fd5b50565b600081519050610118816100f2565b92915050565b600060208284031215610134576101336100bb565b5b600061014284828501610109565b91505092915050565b608051610c2d6101746000396000818161033a015281816103fb01526104fb0152610c2d6000f3fe6080604052600436106100595760003560e01c806306e99fef146100725780632e1a7d4d1461007c5780633d79d1c8146100a55780637525693b146100d05780638da5cb5b1461010d578063a22e6ee31461013857610068565b3661006857610066610163565b005b610070610163565b005b61007a610163565b005b34801561008857600080fd5b506100a3600480360381019061009e9190610701565b610338565b005b3480156100b157600080fd5b506100ba6104db565b6040516100c7919061073d565b60405180910390f35b3480156100dc57600080fd5b506100f760048036038101906100f291906107b6565b6104e1565b604051610104919061073d565b60405180910390f35b34801561011957600080fd5b506101226104f9565b60405161012f91906107f2565b60405180910390f35b34801561014457600080fd5b5061014d61051d565b60405161015a91906107f2565b60405180910390f35b6000349050346101a0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660005461054390919063ffffffff16565b13156101d8576040517fa29f122700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001546101e6919061083c565b6001819055506101f533610591565b1561028d5780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610245919061083c565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610335565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156103f7576040517fa9ba821500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161043d906108a1565b60006040518083038185875af1925050503d806000811461047a576040519150601f19603f3d011682016040523d82523d6000602084013e61047f565b606091505b50509050806104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610913565b60405180910390fd5b816001546104d19190610933565b6001819055505050565b60015481565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806305f5e1006105548461063f565b61055e91906109a0565b9050670de0b6b3a7640000846105749190610a0a565b93506000818561058491906109a0565b9050809250505092915050565b600080600090505b600480549050811015610634578273ffffffffffffffffffffffffffffffffffffffff16600482815481106105d1576105d0610a82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361062157600191505061063a565b808061062c90610ab1565b915050610599565b50600090505b919050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190610b7c565b5050509150508092505050919050565b600080fd5b6000819050919050565b6106de816106cb565b81146106e957600080fd5b50565b6000813590506106fb816106d5565b92915050565b600060208284031215610717576107166106c6565b5b6000610725848285016106ec565b91505092915050565b610737816106cb565b82525050565b6000602082019050610752600083018461072e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078382610758565b9050919050565b61079381610778565b811461079e57600080fd5b50565b6000813590506107b08161078a565b92915050565b6000602082840312156107cc576107cb6106c6565b5b60006107da848285016107a1565b91505092915050565b6107ec81610778565b82525050565b600060208201905061080760008301846107e3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610847826106cb565b9150610852836106cb565b925082820190508082111561086a5761086961080d565b5b92915050565b600081905092915050565b50565b600061088b600083610870565b91506108968261087b565b600082019050919050565b60006108ac8261087e565b9150819050919050565b600082825260208201905092915050565b7f7472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b60006108fd601c836108b6565b9150610908826108c7565b602082019050919050565b6000602082019050818103600083015261092c816108f0565b9050919050565b600061093e826106cb565b9150610949836106cb565b92508282039050818111156109615761096061080d565b5b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109ab82610967565b91506109b683610967565b9250826109c6576109c5610971565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156109ff576109fe61080d565b5b828205905092915050565b6000610a1582610967565b9150610a2083610967565b9250828202610a2e81610967565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610a6657610a6561080d565b5b8282058414831517610a7b57610a7a61080d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abc826106cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aee57610aed61080d565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b610b1881610af9565b8114610b2357600080fd5b50565b600081519050610b3581610b0f565b92915050565b610b4481610967565b8114610b4f57600080fd5b50565b600081519050610b6181610b3b565b92915050565b600081519050610b76816106d5565b92915050565b600080600080600060a08688031215610b9857610b976106c6565b5b6000610ba688828901610b26565b9550506020610bb788828901610b52565b9450506040610bc888828901610b67565b9350506060610bd988828901610b67565b9250506080610bea88828901610b26565b915050929550929590935056fea26469706673582212204a925a31215e77ecc42a913432d2e591f42717e2ce584f5d7713b6554debe4a064736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806306e99fef146100725780632e1a7d4d1461007c5780633d79d1c8146100a55780637525693b146100d05780638da5cb5b1461010d578063a22e6ee31461013857610068565b3661006857610066610163565b005b610070610163565b005b61007a610163565b005b34801561008857600080fd5b506100a3600480360381019061009e9190610701565b610338565b005b3480156100b157600080fd5b506100ba6104db565b6040516100c7919061073d565b60405180910390f35b3480156100dc57600080fd5b506100f760048036038101906100f291906107b6565b6104e1565b604051610104919061073d565b60405180910390f35b34801561011957600080fd5b506101226104f9565b60405161012f91906107f2565b60405180910390f35b34801561014457600080fd5b5061014d61051d565b60405161015a91906107f2565b60405180910390f35b6000349050346101a0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660005461054390919063ffffffff16565b13156101d8576040517fa29f122700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001546101e6919061083c565b6001819055506101f533610591565b1561028d5780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610245919061083c565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610335565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156103f7576040517fa9ba821500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405161043d906108a1565b60006040518083038185875af1925050503d806000811461047a576040519150601f19603f3d011682016040523d82523d6000602084013e61047f565b606091505b50509050806104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610913565b60405180910390fd5b816001546104d19190610933565b6001819055505050565b60015481565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806305f5e1006105548461063f565b61055e91906109a0565b9050670de0b6b3a7640000846105749190610a0a565b93506000818561058491906109a0565b9050809250505092915050565b600080600090505b600480549050811015610634578273ffffffffffffffffffffffffffffffffffffffff16600482815481106105d1576105d0610a82565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361062157600191505061063a565b808061062c90610ab1565b915050610599565b50600090505b919050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190610b7c565b5050509150508092505050919050565b600080fd5b6000819050919050565b6106de816106cb565b81146106e957600080fd5b50565b6000813590506106fb816106d5565b92915050565b600060208284031215610717576107166106c6565b5b6000610725848285016106ec565b91505092915050565b610737816106cb565b82525050565b6000602082019050610752600083018461072e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078382610758565b9050919050565b61079381610778565b811461079e57600080fd5b50565b6000813590506107b08161078a565b92915050565b6000602082840312156107cc576107cb6106c6565b5b60006107da848285016107a1565b91505092915050565b6107ec81610778565b82525050565b600060208201905061080760008301846107e3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610847826106cb565b9150610852836106cb565b925082820190508082111561086a5761086961080d565b5b92915050565b600081905092915050565b50565b600061088b600083610870565b91506108968261087b565b600082019050919050565b60006108ac8261087e565b9150819050919050565b600082825260208201905092915050565b7f7472616e73616374696f6e2077617320756e7375636365737366756c00000000600082015250565b60006108fd601c836108b6565b9150610908826108c7565b602082019050919050565b6000602082019050818103600083015261092c816108f0565b9050919050565b600061093e826106cb565b9150610949836106cb565b92508282039050818111156109615761096061080d565b5b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109ab82610967565b91506109b683610967565b9250826109c6576109c5610971565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156109ff576109fe61080d565b5b828205905092915050565b6000610a1582610967565b9150610a2083610967565b9250828202610a2e81610967565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610a6657610a6561080d565b5b8282058414831517610a7b57610a7a61080d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610abc826106cb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aee57610aed61080d565b5b600182019050919050565b600069ffffffffffffffffffff82169050919050565b610b1881610af9565b8114610b2357600080fd5b50565b600081519050610b3581610b0f565b92915050565b610b4481610967565b8114610b4f57600080fd5b50565b600081519050610b6181610b3b565b92915050565b600081519050610b76816106d5565b92915050565b600080600080600060a08688031215610b9857610b976106c6565b5b6000610ba688828901610b26565b9550506020610bb788828901610b52565b9450506040610bc888828901610b67565b9350506060610bd988828901610b67565b9250506080610bea88828901610b26565b915050929550929590935056fea26469706673582212204a925a31215e77ecc42a913432d2e591f42717e2ce584f5d7713b6554debe4a064736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 33,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_int256"
      },
      {
        "astId": 35,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "bal",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "ethUsdPriceFeedAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 41,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "usersWithAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 44,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}